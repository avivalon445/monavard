# ========================================
# CustomBid Backend - Environment Variables
# ========================================
# 
# INSTRUCTIONS:
# 1. Copy this entire file
# 2. Create a new file named ".env" in the backend directory
# 3. Paste the content and fill in your actual values
# 4. Never commit the .env file to version control!
#
# ========================================

# ========================================
# SERVER CONFIGURATION
# ========================================
NODE_ENV=development
PORT=5000
API_VERSION=v1

# ========================================
# DATABASE CONFIGURATION
# ========================================
DB_HOST=localhost
DB_PORT=3306
DB_USER=root
DB_PASSWORD=your_mysql_password_here
DB_NAME=custombid

# ========================================
# JWT CONFIGURATION
# ========================================
# SECURITY: Use strong, random secrets in production
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_jwt_secret_at_least_32_characters_long_change_in_production
JWT_REFRESH_SECRET=your_jwt_refresh_secret_at_least_32_characters_long_change_in_production
JWT_EXPIRE=1h
JWT_REFRESH_EXPIRE=7d

# ========================================
# COOKIE CONFIGURATION
# ========================================
COOKIE_SECRET=your_cookie_secret_here_change_in_production

# ========================================
# EMAIL CONFIGURATION (NodeMailer)
# ========================================
# For Gmail:
# 1. Enable 2-Factor Authentication
# 2. Generate App Password: https://myaccount.google.com/apppasswords
# 3. Use the generated password below
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your_email@gmail.com
EMAIL_PASSWORD=your_gmail_app_password_here
EMAIL_FROM=CustomBid <noreply@custombid.com>

# ========================================
# OPENAI CONFIGURATION (for AI categorization)
# ========================================
# Get API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=1000

# ========================================
# STRIPE CONFIGURATION (for payments)
# ========================================
# Get keys from: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=your_stripe_secret_key_here
STRIPE_PUBLISHABLE_KEY=your_stripe_publishable_key_here
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret_here

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
MAX_FILE_SIZE=10485760
UPLOAD_PATH=./uploads
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/jpg,application/pdf,application/msword

# ========================================
# FRONTEND URL (for CORS)
# ========================================
FRONTEND_URL=http://localhost:3000

# ========================================
# RATE LIMITING
# ========================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
# Set to 'true' to disable rate limiting in development
DISABLE_RATE_LIMIT=true

# ========================================
# COMMISSION SETTINGS
# ========================================
COMMISSION_RATE=5
MIN_COMMISSION=1.00

# ========================================
# SECURITY SETTINGS
# ========================================
BCRYPT_ROUNDS=12
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_TIME=3600000

# ========================================
# LOGGING
# ========================================
LOG_LEVEL=info
LOG_FILE=./logs/app.log

# ========================================
# END OF CONFIGURATION
# ========================================
#
# Quick Setup Checklist:
# [ ] Update all database credentials
# [ ] Generate strong JWT secrets
# [ ] Configure email service
# [ ] Set frontend URL
# [ ] (Optional) Add OpenAI API key
# [ ] (Optional) Add Stripe keys
#
# Test your configuration:
# npm run dev
#
# ========================================

